name: build

on: pull_request

env:
  # DOCKER_BUILDKIT: 1
  DOCKERHUB_USER: ${{ secrets.DOCKER_USERNAME }}
  DOCKERHUB_PASS: ${{ secrets.DOCKER_PASSWORD }}
  IMAGE: adachikun/snowforecast-twitter-bot

jobs:

  # build_no_cache:
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Create .env file
  #       run: echo "${{ secrets.GITHUBACTION_ENV }}" > .env
  #     - name: Build
  #       run: docker build .

  # build_no_cache_buildkit:
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Create .env file
  #       run: echo "${{ secrets.GITHUBACTION_ENV }}" > .env
  #     - name: Build
  #       env:
  #         DOCKER_BUILDKIT: 1
  #       run: docker build .

 build_with_docker_save_load:
   runs-on: ubuntu-18.04
   steps:
   - uses: actions/checkout@master
   - name: Create .env file
     run: echo "${{ secrets.GITHUBACTION_ENV }}" > .env

  #  - id: cache-docker
  #    uses: actions/cache@v1
  #    with:
  #      path: /tmp/cache
  #      key: cache-${{ hashFiles('Dockerfile') }}

  #  - run: |
  #     docker load -i /tmp/cache/builder.tar || true
  #    if: steps.cache-docker.outputs.cache-hit == 'true'

  #  - run: docker build --target builder -t builder --cache-from=builder .

  #  - run: docker build .

  #  - run: |
  #     mkdir -p /tmp/cache && docker save builder -o /tmp/cache/builder.tar && ls -lh /tmp/cache || true

   - id: cache-docker
     uses: actions/cache@v1
     with:
       path: /tmp/docker-save
       key: docker-save-${{ hashFiles('Dockerfile') }}

   - run: docker load -i /tmp/docker-save/snapshot.tar || true
     if: steps.cache-docker.outputs.cache-hit == 'true'

   - run: docker build --target builder -t thing --cache-from=thing-cache .
   - run: docker build .

   - run: docker tag thing thing-cache && mkdir -p /tmp/docker-save && docker save thing-cache -o /tmp/docker-save/snapshot.tar && ls -lh /tmp/docker-save || true
      # if: always() && steps.cache-docker.outputs.cache-hit != 'true'

  # cache-from-with-build-arg:
  #   runs-on: ubuntu-18.04
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: Create .env file
  #     run: echo "${{ secrets.GITHUBACTION_ENV }}" > .env
  #   - name: login
  #     run: docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASS
  #   - name: build builder image
  #     run: docker build --target builder --cache-from $IMAGE:builder --tag $IMAGE:builder --build-arg BUILDKIT_INLINE_CACHE=1 .
  #   - name: build image
  #     run: docker build --cache-from $IMAGE:builder --cache-from $IMAGE:latest --tag $IMAGE:latest --build-arg BUILDKIT_INLINE_CACHE=1 .
  #   - name: push image
  #     run: |
  #       docker push $IMAGE:builder &
  #       docker push $IMAGE:latest &
  #       wait
